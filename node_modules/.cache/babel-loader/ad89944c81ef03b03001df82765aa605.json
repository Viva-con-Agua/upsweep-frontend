{"remainingRequest":"/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/node_modules/babel-loader/lib/index.js!/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/node_modules/eslint-loader/index.js??ref--13-0!/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/src/store.js","dependencies":[{"path":"/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/src/store.js","mtime":1559053807076},{"path":"/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/node_modules/babel-loader/lib/index.js","mtime":499162500000},{"path":"/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/node_modules/eslint-loader/index.js","mtime":499162500000}],"contextDependencies":[],"result":["import Vuex from 'vuex';\nimport Vue from 'vue';\nimport axios from 'axios';\nVue.use(Vuex);\nVue.use(axios);\naxios.defaults.withCredentials = true;\nexport var store = new Vuex.Store({\n  state: {\n    comments: [],\n    currentSession: '',\n    test: \"hello Wold\"\n  },\n  getters: {\n    getTest: function getTest(state) {\n      return state.test;\n    },\n    getComments: function getComments(state) {\n      return state.comments;\n    }\n  },\n  mutations: {\n    setComments: function setComments(state, comments) {\n      state.comments = comments;\n    },\n    unshiftComment: function unshiftComment(state, comment) {\n      state.comment.unshift(comment);\n    }\n  },\n  actions: {\n    GET_COMMENTS_BY_POOLEVENT_ID: function GET_COMMENTS_BY_POOLEVENT_ID(_ref, id) {\n      var commit = _ref.commit;\n      axios.get(\"http://localhost/api/comment/\" + id).then(function (resp) {\n        commit('setComments', resp.data.data.comments);\n      }).catch(function (err) {\n        return err.message;\n      });\n    },\n    POST_COMMENT: function POST_COMMENT(_ref2, comment) {\n      var commit = _ref2.commit;\n      axios.post(\"http://localhost/api/comment\", comment).then(function (resp) {\n        commit('unshiftComment', resp.data.data);\n      }).catch(function (err) {});\n    }\n  }\n});",{"version":3,"sources":["/home/bilal/Schreibtisch/studi-project/comment-widget/vca-upsweep/src/store.js"],"names":["Vuex","Vue","axios","use","defaults","withCredentials","store","Store","state","comments","currentSession","test","getters","getTest","getComments","mutations","setComments","unshiftComment","comment","unshift","actions","GET_COMMENTS_BY_POOLEVENT_ID","id","commit","get","then","resp","data","catch","err","message","POST_COMMENT","post"],"mappings":"AAAA,OAAOA,IAAP,MAAiB,MAAjB;AACA,OAAOC,GAAP,MAAgB,KAAhB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACAD,GAAG,CAACE,GAAJ,CAAQH,IAAR;AACAC,GAAG,CAACE,GAAJ,CAAQD,KAAR;AACAA,KAAK,CAACE,QAAN,CAAeC,eAAf,GAAiC,IAAjC;AAEA,OAAO,IAAMC,KAAK,GAAG,IAAIN,IAAI,CAACO,KAAT,CAAe;AAChCC,EAAAA,KAAK,EAAE;AACHC,IAAAA,QAAQ,EAAE,EADP;AAEHC,IAAAA,cAAc,EAAE,EAFb;AAGHC,IAAAA,IAAI,EAAE;AAHH,GADyB;AAMhCC,EAAAA,OAAO,EAAE;AACLC,IAAAA,OAAO,EAAE,iBAACL,KAAD,EAAW;AAChB,aAAOA,KAAK,CAACG,IAAb;AACH,KAHI;AAILG,IAAAA,WAAW,EAAE,qBAACN,KAAD,EAAW;AACpB,aAAOA,KAAK,CAACC,QAAb;AACH;AANI,GANuB;AAchCM,EAAAA,SAAS,EAAE;AACPC,IAAAA,WAAW,EAAE,qBAACR,KAAD,EAAQC,QAAR,EAAqB;AAC9BD,MAAAA,KAAK,CAACC,QAAN,GAAiBA,QAAjB;AACH,KAHM;AAIPQ,IAAAA,cAAc,EAAE,wBAACT,KAAD,EAAQU,OAAR,EAAoB;AAChCV,MAAAA,KAAK,CAACU,OAAN,CAAcC,OAAd,CAAsBD,OAAtB;AACH;AANM,GAdqB;AAsBhCE,EAAAA,OAAO,EAAE;AACLC,IAAAA,4BAA4B,EAAE,4CAAaC,EAAb,EAAoB;AAAA,UAAjBC,MAAiB,QAAjBA,MAAiB;AAC9CrB,MAAAA,KAAK,CACAsB,GADL,CACS,kCAAkCF,EAD3C,EAEKG,IAFL,CAEU,UAAAC,IAAI,EAAI;AACVH,QAAAA,MAAM,CAAC,aAAD,EAAgBG,IAAI,CAACC,IAAL,CAAUA,IAAV,CAAelB,QAA/B,CAAN;AACH,OAJL,EAKKmB,KALL,CAKW,UAAAC,GAAG,EAAI;AACV,eAAOA,GAAG,CAACC,OAAX;AACH,OAPL;AAQH,KAVI;AAWLC,IAAAA,YAAY,EAAE,6BAAab,OAAb,EAAyB;AAAA,UAAtBK,MAAsB,SAAtBA,MAAsB;AACnCrB,MAAAA,KAAK,CAAC8B,IAAN,CAAW,8BAAX,EAA2Cd,OAA3C,EACKO,IADL,CACU,UAAAC,IAAI,EAAI;AACVH,QAAAA,MAAM,CAAC,gBAAD,EAAmBG,IAAI,CAACC,IAAL,CAAUA,IAA7B,CAAN;AACH,OAHL,EAIKC,KAJL,CAIW,UAAAC,GAAG,EAAI,CAEb,CANL;AAOH;AAnBI;AAtBuB,CAAf,CAAd","sourcesContent":["import Vuex from 'vuex'\nimport Vue from 'vue'\nimport axios from 'axios'\nVue.use(Vuex);\nVue.use(axios);\naxios.defaults.withCredentials = true;\n\nexport const store = new Vuex.Store({\n    state: {\n        comments: [],\n        currentSession: '',\n        test: \"hello Wold\"\n    },\n    getters: {\n        getTest: (state) => {\n            return state.test;\n        },\n        getComments: (state) => {\n            return state.comments;\n        }\n    },\n    mutations: {\n        setComments: (state, comments) => {\n            state.comments = comments;\n        },\n        unshiftComment: (state, comment) => {\n            state.comment.unshift(comment);\n        }\n    },\n    actions: {\n        GET_COMMENTS_BY_POOLEVENT_ID: ({ commit }, id) => {\n            axios\n                .get(\"http://localhost/api/comment/\" + id)\n                .then(resp => {\n                    commit('setComments', resp.data.data.comments);\n                })\n                .catch(err => {\n                    return err.message;\n                });\n        },\n        POST_COMMENT: ({ commit }, comment) => {\n            axios.post(\"http://localhost/api/comment\", comment)\n                .then(resp => {\n                    commit('unshiftComment', resp.data.data);\n                })\n                .catch(err => {\n\n                });\n        },\n    }\n});\n"]}]}